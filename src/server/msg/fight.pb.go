// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/fight.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartFight struct {
	ErrorCode            int32    `protobuf:"varint,1,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	Version              float32  `protobuf:"fixed32,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartFight) Reset()         { *m = StartFight{} }
func (m *StartFight) String() string { return proto.CompactTextString(m) }
func (*StartFight) ProtoMessage()    {}
func (*StartFight) Descriptor() ([]byte, []int) {
	return fileDescriptor_4eec84e458269d2f, []int{0}
}

func (m *StartFight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartFight.Unmarshal(m, b)
}
func (m *StartFight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartFight.Marshal(b, m, deterministic)
}
func (m *StartFight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartFight.Merge(m, src)
}
func (m *StartFight) XXX_Size() int {
	return xxx_messageInfo_StartFight.Size(m)
}
func (m *StartFight) XXX_DiscardUnknown() {
	xxx_messageInfo_StartFight.DiscardUnknown(m)
}

var xxx_messageInfo_StartFight proto.InternalMessageInfo

func (m *StartFight) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *StartFight) GetVersion() float32 {
	if m != nil {
		return m.Version
	}
	return 0
}

type FightResult struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FightResult) Reset()         { *m = FightResult{} }
func (m *FightResult) String() string { return proto.CompactTextString(m) }
func (*FightResult) ProtoMessage()    {}
func (*FightResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_4eec84e458269d2f, []int{1}
}

func (m *FightResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FightResult.Unmarshal(m, b)
}
func (m *FightResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FightResult.Marshal(b, m, deterministic)
}
func (m *FightResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FightResult.Merge(m, src)
}
func (m *FightResult) XXX_Size() int {
	return xxx_messageInfo_FightResult.Size(m)
}
func (m *FightResult) XXX_DiscardUnknown() {
	xxx_messageInfo_FightResult.DiscardUnknown(m)
}

var xxx_messageInfo_FightResult proto.InternalMessageInfo

func (m *FightResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FightResult) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type EnterFight struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnterFight) Reset()         { *m = EnterFight{} }
func (m *EnterFight) String() string { return proto.CompactTextString(m) }
func (*EnterFight) ProtoMessage()    {}
func (*EnterFight) Descriptor() ([]byte, []int) {
	return fileDescriptor_4eec84e458269d2f, []int{2}
}

func (m *EnterFight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnterFight.Unmarshal(m, b)
}
func (m *EnterFight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnterFight.Marshal(b, m, deterministic)
}
func (m *EnterFight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnterFight.Merge(m, src)
}
func (m *EnterFight) XXX_Size() int {
	return xxx_messageInfo_EnterFight.Size(m)
}
func (m *EnterFight) XXX_DiscardUnknown() {
	xxx_messageInfo_EnterFight.DiscardUnknown(m)
}

var xxx_messageInfo_EnterFight proto.InternalMessageInfo

func (m *EnterFight) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnterFight) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*StartFight)(nil), "msg.StartFight")
	proto.RegisterType((*FightResult)(nil), "msg.FightResult")
	proto.RegisterType((*EnterFight)(nil), "msg.EnterFight")
}

func init() { proto.RegisterFile("src/fight.proto", fileDescriptor_4eec84e458269d2f) }

var fileDescriptor_4eec84e458269d2f = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x2e, 0x4a, 0xd6,
	0x4f, 0xcb, 0x4c, 0xcf, 0x28, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2d, 0x4e,
	0x57, 0x72, 0xe1, 0xe2, 0x0a, 0x2e, 0x49, 0x2c, 0x2a, 0x71, 0x03, 0x49, 0x08, 0xc9, 0x70, 0x71,
	0xa6, 0x16, 0x15, 0xe5, 0x17, 0x39, 0xe7, 0xa7, 0xa4, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06,
	0x21, 0x04, 0x84, 0x24, 0xb8, 0xd8, 0xcb, 0x52, 0x8b, 0x8a, 0x33, 0xf3, 0xf3, 0x24, 0x98, 0x14,
	0x18, 0x35, 0x98, 0x82, 0x60, 0x5c, 0x25, 0x6b, 0x2e, 0x6e, 0xb0, 0x01, 0x41, 0xa9, 0xc5, 0xa5,
	0x39, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0x10, 0x13, 0x38, 0x83, 0xc0, 0x6c, 0x90,
	0xe6, 0xe4, 0xfc, 0xbc, 0x92, 0xd4, 0xbc, 0x12, 0xb0, 0x66, 0xce, 0x20, 0x18, 0x57, 0xc9, 0x8a,
	0x8b, 0xcb, 0x35, 0xaf, 0x24, 0xb5, 0x08, 0xe2, 0x04, 0x92, 0xf4, 0x26, 0xb1, 0x81, 0xbd, 0x62,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xb2, 0xaa, 0x99, 0xc5, 0xdd, 0x00, 0x00, 0x00,
}
